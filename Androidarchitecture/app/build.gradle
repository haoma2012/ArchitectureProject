apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

// AOP plugin
apply plugin: 'android-aspectjx'
aspectjx {
    //排除所有package路径中包含`android.support`的class文件及库（jar文件）
    exclude 'android.support'
}

static def compileDate() {
    def date = new Date()
    def formattedDate = date.format('YYYYMMdd')
    return formattedDate
}
ext.anko_version='0.10.8'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mobike.android_architecture"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        // 支持分包
        multiDexEnabled = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        resConfigs "zh"
    }
    dexOptions {
//        incremental true
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.3'
    implementation 'com.android.support:design:28.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':uilibrary')
    //  内存泄漏
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'


    // Anko 一个代码编写布局替代xml
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "com.google.code.gson:gson:2.4"

    // AOP
    //implementation 'org.aspectj:aspectjrt:1.8.13'


}

android.applicationVariants.all { variant ->
    variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
//        //这个修改输出APK的文件名
        def outputFile = apkData.outputFileName
        if (outputFile != null && outputFile.endsWith('.apk')) {
            //这里修改apk文件名
            def fileName = outputFile.replace("app-", "").replace(".apk", "-${versionName}-${compileDate()}" + ".apk")
            apkData.outputFileName = fileName
        }
    }
}

configurations.all {

    resolutionStrategy {
        //强制模块使用指定版本号(防止其他模块使用、跟主工程不匹配的版本：
        forcedModules = [
                "com.android.support:support-annotations:27.1.1",
                "com.android.support:appcompat-v7:27.1.1",
                "com.android.support:design:27.1.1",
                "com.android.support:supprot-compat:27.1.1",
                "com.android.support:animated-vector-drawable:27.1.1",

        ]
    }
}

//// add  aspectj 任务
//import org.aspectj.bridge.IMessage
//import org.aspectj.bridge.MessageHandler
//import org.aspectj.tools.ajc.Main
//final def log = project.logger
//final def variants = project.android.applicationVariants
//
//variants.all { variant ->
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return;
//    }
//
//    JavaCompile javaCompile = variant.javaCompile
//    javaCompile.doLast {
//        String[] args = ["-showWeaveInfo",
//                         "-1.8",
//                         "-inpath", javaCompile.destinationDir.toString(),
//                         "-aspectpath", javaCompile.classpath.asPath,
//                         "-d", javaCompile.destinationDir.toString(),
//                         "-classpath", javaCompile.classpath.asPath,
//                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
//        log.debug "ajc args: " + Arrays.toString(args)
//
//        MessageHandler handler = new MessageHandler(true);
//        new Main().run(args, handler)
//        for (IMessage message : handler.getMessages(null, true)) {
//            switch (message.getKind()) {
//                case IMessage.ABORT:
//                case IMessage.ERROR:
//                case IMessage.FAIL:
//                    log.error message.message, message.thrown
//                    break;
//                case IMessage.WARNING:
//                    log.warn message.message, message.thrown
//                    break;
//                case IMessage.INFO:
//                    log.info message.message, message.thrown
//                    break;
//                case IMessage.DEBUG:
//                    log.debug message.message, message.thrown
//                    break;
//            }
//        }
//    }
//}
